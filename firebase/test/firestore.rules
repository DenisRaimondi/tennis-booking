rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funzioni di utilit√†
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "SUPER_USER";
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isActiveUser() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == "ACTIVE";
    }

    // Regole per gli utenti
    match /users/{userId} {
      allow create: if true;  // Permette la registrazione
      allow read: if isOwner(userId) || isAdmin();
      allow update: if (isOwner(userId) && 
                        request.resource.data.role == resource.data.role) || 
                      isAdmin();
      allow delete: if isAdmin() || (request.auth != null && request.auth.uid == userId);
    }

    // Regole per le prenotazioni
    match /bookings/{bookingId} {
      allow read: if isAuthenticated();
      
      allow create: if isAuthenticated() && 
                   isActiveUser() &&
                   request.resource.data.userId == request.auth.uid;
      
      allow update: if isAuthenticated() &&
                   ((request.auth.uid == resource.data.userId && 
                     resource.data.status == "ACTIVE") || 
                    isAdmin());
      
      allow delete: if isAuthenticated() &&
                   (request.auth.uid == resource.data.userId || isAdmin());
    }

    // Regole per le configurazioni
    match /configurations/{configId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Regole per i report
    match /reports/{reportId} {
      allow read, write: if isAdmin();
    }

    // Regole per i log di sistema
    match /systemLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }
    
  }
}